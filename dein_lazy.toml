# [[plugins]]
# repo = 'vim-sciprts/renamer.vim'
# on_cmd = 'Renamer'
[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = 'QuickRun'
[[plugins]]
repo = 'vim-scripts/VOoM'
on_cmd = 'Voom'
[[plugins]] # 背景透過
repo = 'miyakogi/seiya.vim'
on_cmd = 'SeiyaEnable'
hook_add = '''
  "" seiya.vim 半透明化
  " let g:seiya_auto_enable=1
'''
[[plugins]] # 置換をプレビュー
repo = 'osyo-manga/vim-over'
on_cmd = 'OverCommandLine'
[[plugins]]
repo = 'vim-scripts/sudo.vim'
on_cmd = ['SudoWrite', 'SudoRead']
[[plugins]]
repo = 'Shougo/vimshell'
on_cmd = 'VimShell'
[[plugins]]
repo = 'sjl/gundo.vim'
on_cmd = 'GundoToggle'
hook_add = '''
  ""gundo.vim 
  nnoremap <F3> :GundoToggle<CR>
  if has('persistent_undo')
    set undofile
    set undodir=./.vimundo,~/.vim/undo
  endif
'''
[[plugins]]
repo = 'seventhsense/nerdtree'
rev  = 'development'
on_cmd = 'NERDTreeToggle'
hook_add = '''
  "" NERD_tree.vim
  nnoremap <f2> :NERDTreeToggle<CR>
  ""最後に残ったウィンドウがNERDTREEのみのときはvimを閉じる
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
  let g:NERDTreeDirArrows=0
  let g:NERDTreeMouseMode=0
'''
[[plugins]]
repo = 'h1mesuke/vim-alignta'
on_if = 1
on_cmd = 'Alignta'
on_add = '''
  ""Align
  let g:Align_xstrlen = 3
'''
# Unite source
[[plugins]]
repo = 'basyura/unite-rails'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
hook_add = '''
  ""unite-rails
  noremap :rc :<C-u>Unite rails/controller<CR>
  noremap :rm :<C-u>Unite rails/model<CR>
  noremap :rv :<C-u>Unite rails/view<CR>
  noremap :rh :<C-u>Unite rails/helper<CR>
  noremap :rs :<C-u>Unite rails/stylesheet<CR>
  noremap :rj :<C-u>Unite rails/javascript<CR>
  noremap :rr :<C-u>Unite rails/route<CR>
  noremap :rg :<C-u>Unite rails/gemfile<CR>
  noremap :rt :<C-u>Unite rails/spec<CR>
'''
[[plugins]]
repo = 'Shougo/neoyank.vim'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
on_add = '''
  g:neoyank#limit
  g:neoyank#file
  g:neoyank#registers

  let g:neoyank#file = $HOME.'/.vim/yankring_history_v2.txt' 
'''
[[plugins]]
repo = 'Shougo/neomru.vim'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
[[plugins]]
repo = 'ujihisa/unite-gem'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
[[plugins]]
repo = 'pasela/unite-webcolorname'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
[[plugins]]
repo = 'seventhsense/unite-fileline'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
[[plugins]]
repo = 'Shougo/unite-outline'
on_source = 'unite.vim'
hook_add = '''
  ""unite-outline
  noremap :uo :<C-u>Unite outline<CR>
  noremap :uov :<C-u>Unite -vertical -winwidth=30 outline<CR>
  noremap :] :<C-u>Unite -vertical -winwidth=30 outline<CR>
'''

[[plugins]] # 辞書を引く
repo = 'koron/codic-vim'
[[plugins]]
repo = 'rhysd/unite-codic.vim'
on_if = 1
on_source = ['unite.vim', 'denite.nvim']
# Unite.vim
[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
on_cmd = 'Unite'
hook_add = 'source ~/dot-vim-files/plugin_settings/unite_setting.vim'

# completion & snippets
[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = "has('lua')"
on_event = 'InsertEnter'
hook_add = 'source ~/dot-vim-files/plugin_settings/neocomplete_setting.vim'
[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_add = 'source ~/dot-vim-files/plugin_settings/neosnippet_setting.vim'
[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_source = 'neosnippet.vim'
[[plugins]]
repo = 'honza/vim-snippets'
on_source = 'neosnippet.vim'
# html/css
[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html', 'htm', 'eruby']
[[plugins]]
repo = 'haya14busa/endtagcomment.vim'
hook_add = '''
  nmap ,t <Plug>(endtagcomment)
'''
on_ft = ['html', 'htm']
[[plugins]]
repo = 'groenewege/vim-less'
on_ft = 'less'
[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = 'scss'
[[plugins]]
repo = 'hail2u/vim-css-syntax'
on_ft = ['css', 'scss']
# [[plugins]]
# repo = 'vim-scripts/css_color.vim'
# on_ft = ['css', 'scss']
[[plugins]]
repo = 'Ioannis-Kapoulas/vim-autoprefixer'
on_ft = ['css', 'scss']
hook_add = '''
  "" autoprefixer
  vnoremap ap : <c-u>call PrefixVisualMyCSS()<cr>
  nnoremap ap : <c-u>call PrefixMyCSS()<cr>
  command! Prefix call PrefixMyCSS()
'''

[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = 'ruby'
[[plugins]]
repo = 'tpope/vim-bundler'
on_ft = 'ruby'
on_cmd = 'Bundle'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']
