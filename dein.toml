[[plugins]]
repo = 'Shougo/dein.vim'
[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'
# hook_post_update = '''
  # if dein#util#_is_windows()
    # let cmd = 'tools\\update-dll-mingw'
  # elseif dein#util#_is_cygwin()
    # let cmd = 'make -f make_cygwin.mak'
  # elseif executable('gmake')
    # let cmd = 'gmake'
  # else
    # let cmd = 'make'
  # endif
  # let g:dein#plugin.build = cmd
# '''
[[plugins]]
repo = 'thinca/vim-ref'
hook_add = 'source ~/dot-vim-files/plugin_settings/vim-ref_setting.vim'
# [[plugins]]
# repo = 'taglist.vim'
# [[plugins]]
# repo = 'Source-Explorer-srcexpl.vim'
# [[plugins]]
# repo = 'ctags.vim'
# [[plugins]]
# repo = 'scrooloose/syntastic'
# hook_add = '''
  # ""syntastic
  # let g:syntastic_ruby_checkers = ['rubocop']
  # let g:syntastic_javascript_checkers = ['jshint']
  # let g:syntastic_python_checkers = ['pyflakes', 'pep8']
  # let g:syntastic_markdown_checkers = ['textlint']
  # let g:syntastic_mode_map = { 'mode': 'active', 
                # \ 'active_filetypes': ['ruby'],
                # \ 'passive_filetypes': []}
  # " let g:syntastic_quiet_messages = {'levels': 'warnings'}
# '''
[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_post_update = '''
  helptags ~/.cache/dein/repos/github.com/vim-jp/vimdoc-ja/doc
'''
hook_add = '''
  " vimdoc-ja
  set helplang=ja,en
'''
[[plugins]]
repo = 'Shougo/vimfiler'
on_source = 'source ~/dot-vim-files/plugin_settings/vimfiler_setting.vim'
# [[plugins]] # 重い
# repo = 'lilydjwg/colorizer'
#[[plugins]]
#repo = 'vim-scripts/YankRing.vim'
[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
  nmap p <Plug>(yankround-p)
  xmap p <Plug>(yankround-p)
  nmap P <Plug>(yankround-P)
  nmap gp <Plug>(yankround-gp)
  xmap gp <Plug>(yankround-gp)
  nmap gP <Plug>(yankround-gP)
  nmap <C-p> <Plug>(yankround-prev)
  nmap <C-n> <Plug>(yankround-next)
'''
[[plugins]]
# repo = 'rking/ag.vim'
repo = 'mileszs/ack.vim'
hook_add = '''
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif
'''
[[plugins]]
repo = 'tpope/vim-surround'
hook_add = 'source ~/dot-vim-files/plugin_settings/surround_setting.vim'
[[plugins]]
repo = 'vim-scripts/The-NERD-Commenter'
hook_add = '''
  " キーマップの変更。<Leader>=\+cでコメント化と解除を行う。
  " コメントされていれば、コメントを外し、コメントされてなければコメント化する。
  nmap <Leader>c <Plug>NERDCommenterToggle
  vmap <Leader>c <Plug>NERDCommenterToggle
'''
## movement plugins
[[plugins]] # 対応するカッコに移動
repo = "vim-scripts/matchit.zip"
[[plugins]]
repo = 'bkad/CamelCaseMotion'
hook_add = '''
  ""CamelCaseMotion
  " map <silent> w <Plug>CamelCaseMotion_w
  " map <silent> b <Plug>CamelCaseMotion_b
  " map <silent> e <Plug>CamelCaseMotion_e
  " sunmap w
  " sunmap b
  " sunmap e

  " omap <silent> iw <Plug>CamelCaseMotion_iw
  " xmap <silent> iw <Plug>CamelCaseMotion_iw
  " omap <silent> ib <Plug>CamelCaseMotion_ib
  " xmap <silent> ib <Plug>CamelCaseMotion_ib
  " omap <silent> ie <Plug>CamelCaseMotion_ie
  " xmap <silent> ie <Plug>CamelCaseMotion_ie
'''
[[plugins]] # fキーで移動
repo = 'easymotion/vim-easymotion'
hook_add = 'source ~/dot-vim-files/plugin_settings/easymotion_setting.vim'
## input plugins
[[plugins]] # 閉じカッコを入力
repo = 'cohama/lexima.vim'
[[plugins]]
repo = 'mattn/emmet-vim'
hook_add = 'source ~/dot-vim-files/plugin_settings/emmet_setting.vim'
[[plugins]]
repo = 'vim-scripts/smartchr'
hook_add = '''
  ""smartchr設定
  ""inoremap <expr> = smartchr#one_of('=',' = ', ' == ', ' === ')
'''

# Language
# ruby
[[plugins]]
repo = 'tpope/vim-rails'
[[plugins]]
repo = 'vim-ruby/vim-ruby'
[[plugins]]
repo = 'skwp/vim-rspec'
[[plugins]]
repo = 'tpope/vim-cucumber'
[[plugins]]
repo = 'hron84/vim-Cheffile'
[[plugins]]
repo = 'sunaku/vim-ruby-minitest'
[[plugins]]
repo = 'yuku-t/vim-ref-ri'
# javascript/coffeescript
[[plugins]]
repo = 'heavenshell/vim-jsdoc'
[[plugins]]
repo = 'claco/jasmine.vim'
hook_add = 'source ~/dot-vim-files/plugin_settings/jasmine_setting.vim'
[[plugins]]
repo = 'mklabs/vim-backbone'
[[plugins]]
repo = 'AndrewRadev/vim-eco'
[[plugins]]
repo = 'vim-scripts/vim-coffee-script'
[[plugins]]
repo = 'mattn/jscomplete-vim'
[[plugins]]
repo = 'igetgames/vim-backbone-jscomplete'
[[plugins]]
repo = 'mustache/vim-mustache-handlebars'
hook_add = '''
  " mustache.vim
  let g:mustache_abbreviations = 1
'''
[[plugins]]
repo = 'elzr/vim-json'
hook_add = '''
  " vim-json
  let g:vim_json_syntax_conceal = 0
'''
## other
[[plugins]]
repo = 'tpope/vim-markdown'
[[plugins]]
repo = 'superbrothers/vim-vimperator'
[[plugins]]
repo = 'ekalinin/Dockerfile.vim'
[[plugins]]
repo = 'chr4/nginx.vim'
[[plugins]]
repo = 'dzeban/vim-log-syntax'

## Theme
[[plugins]]
repo = 'tomasr/molokai'
[[plugins]]
repo = 'vim-scripts/desert256.vim'
[[plugins]]
repo = 'jpo/vim-railscasts-theme'
hook_add = '''
au MyAutoCmd VimEnter * nested colorscheme railscasts
'''
[[plugins]]
repo = 'vim-scripts/pyte'
[[plugins]]
repo = 'davidkariuki/sexy-railscasts-256-theme'
[[plugins]]
repo = 'cocopon/iceberg.vim'
# hook_add = '''
  # set background=dark
  # " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  # " 但し Colorscheme イベントの発生が抑制されないよう nested を付ける。
  # au MyAutoCmd VimEnter * nested colorscheme iceberg
# '''

## text object


## SNS, Network
# [[plugins]]
# repo = 'kakkyz81/evervim'
# [[plugins]]
# repo = 'mattn/gist-vim'
# on_add = '''
  # ""gist.vim
  # let g:gist_show_privates = 1
  # let g:gist_post_private = 1
# '''
[[plugins]]
repo = 'mattn/webapi-vim'

## UI
[[plugins]]
repo = "itchyny/lightline.vim"
hook_add = '''
  let g:lightline = {
        \ 'colorscheme': 'wombat',
        \ }
'''
[[plugins]] # indentの深さに色を付ける
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
  " indent_guides
  " インデントの深さに色を付ける
  colorscheme default
  let g:indent_guides_start_level=2
  let g:indent_guides_auto_colors=0
  let g:indent_guides_enable_on_vim_startup=0
  let g:indent_guides_color_change_percent=20
  let g:indent_guides_guide_size=1
  let g:indent_guides_space_guides=1

  hi IndentGuidesOdd  ctermbg=235
  hi IndentGuidesEven ctermbg=237
  au FileType coffee,ruby,javascript,python IndentGuidesEnable
  nmap <silent><Leader>ig <Plug>IndentGuidesToggle
'''
# [[plugins]] #内容ごとにsyntaxを変える
# repo = 'Shougo/context_filetype.vim'
# [[plugins]]
# repo = 'osyo-manga/vim-precious'
# depends = ['Shougo/context_filetype.vim']

## Git
[[plugins]] # More Pleasant Editing on Commit message
repo = 'rhysd/committia.vim'
hook_add = 'source ~/dot-vim-files/plugin_settings/committia_setting.vim'
[[plugins]]
repo = 'tpope/vim-fugitive'
[[plugins]]
repo = 'sgur/vim-gitgutter'

# New Plugin
# [[plugins]]
# repo = 'roxma/nvim-yarp' 
# [[plugins]]
# repo = 'roxma/vim-hug-neovim-rpc' 

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# depends = ['roxma/nvim-yarp', 'roxma/vim-hug-neovim-rpc']
# hook_add = '''
  # let g:deoplete#enable_at_startup = 1
# '''
# [[plugins]]
# repo = 'fishbullet/deoplete-ruby'
[[plugins]]
repo = 'majutsushi/tagbar'
hook_add = '''
let g:tagbar_ctags_bin = '/usr/local/bin/ctags'
let g:tagbar_width = 26
let g:tagbar_type_markdown = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:Heading_L1',
        \ 'i:Heading_L2',
        \ 'k:Heading_L3'
    \ ]
\ }
'''
[[plugins]]
repo = 'kannokanno/previm'
[[plugins]]
repo = 'tyru/open-browser.vim'

# [[plugins]]
# repo = 'w0rp/ale'
# [[plugins]]
# repo = 'ryanoasis/vim-devicons'
# hook_add = '''
# set encoding=UTF-8
# '''
# [[plugins]]
# repo = 'delphinus/lightline-delphinus'
# hook_add = '''
# let g:lightline_delphinus_colorscheme='solarized_improved'

# let g:ale_echo_msg_error_str = nr2char(0xf421) . ' '
# let g:ale_echo_msg_warning_str = nr2char(0xf420) . ' '
# let g:ale_echo_msg_info_str = nr2char(0xf05a) . ' '
# let g:ale_echo_msg_format = '%severity%  %linter% - %s'
# let g:ale_sign_column_always = 1
# let g:ale_sign_error = g:ale_echo_msg_error_str
# let g:ale_sign_warning = g:ale_echo_msg_warning_str
# let g:ale_statusline_format = [
      # \ g:ale_echo_msg_error_str . ' %d',
      # \ g:ale_echo_msg_warning_str . ' %d',
      # \ nr2char(0xf4a1) . '  ']
# '''
[[plugins]]
repo = 'junegunn/goyo.vim'
[[plugins]]
repo = 'miyakogi/livemark.vim'
hook_add = '''
let g:livemark_python = '/Users/seventh/.pyenv/shims/python'
'''
[[plugins]] # full speed matcher
repo = 'nixprime/cpsm'
build = 'env PY3=ON ./install.sh'
[[plugins]]
repo = 'git-time-metric/gtm-vim-plugin'
